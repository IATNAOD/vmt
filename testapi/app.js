const axios = require('axios')

axios.defaults.withCredentials = true;

const getPlaySession = () => {
  return new Promise(async resolve => {
    let loginRes = await axios.post(
      'http://datahub.yc.pbd.ai:9002/logIn',
      {
        "username": "datahub",
        "password": "datahub"
      }
    )
    resolve(loginRes)
  })
}

const getDataSets = (path, Cookie, dataSets = []) => {
  return new Promise(async resolve => {

    let dataSetsRootRes = await axios.post('http://datahub.yc.pbd.ai:9002/api/graphql',
      {
        "variables": {
          "input": {
            "type": "DATASET",
            "path": path,
            "start": 0,
            "count": 10,
            "filters": null
          }
        },
        "query": "query getBrowseResults($input: BrowseInput!) {\n  browse(input: $input) {\n    entities {\n      urn\n      type\n      ... on Dataset {\n        name\n        origin\n        description\n        platform {\n          name\n          info {\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        globalTags {\n          ...globalTagsFields\n          __typename\n        }\n        glossaryTerms {\n          ...glossaryTerms\n          __typename\n        }\n        __typename\n      }\n      ... on Dashboard {\n        urn\n        type\n        tool\n        dashboardId\n        info {\n          name\n          description\n          externalUrl\n          access\n          lastModified {\n            time\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        globalTags {\n          ...globalTagsFields\n          __typename\n        }\n        glossaryTerms {\n          ...glossaryTerms\n          __typename\n        }\n        __typename\n      }\n      ... on GlossaryTerm {\n        name\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        glossaryTermInfo {\n          definition\n          termSource\n          sourceRef\n          sourceUrl\n          customProperties {\n            key\n            value\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on Chart {\n        urn\n        type\n        tool\n        chartId\n        info {\n          name\n          description\n          externalUrl\n          type\n          access\n          lastModified {\n            time\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        globalTags {\n          ...globalTagsFields\n          __typename\n        }\n        glossaryTerms {\n          ...glossaryTerms\n          __typename\n        }\n        __typename\n      }\n      ... on DataFlow {\n        urn\n        type\n        orchestrator\n        flowId\n        cluster\n        info {\n          name\n          description\n          project\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        globalTags {\n          ...globalTagsFields\n          __typename\n        }\n        glossaryTerms {\n          ...glossaryTerms\n          __typename\n        }\n        __typename\n      }\n      ... on MLFeatureTable {\n        urn\n        type\n        name\n        description\n        featureTableProperties {\n          description\n          mlFeatures {\n            urn\n            __typename\n          }\n          mlPrimaryKeys {\n            urn\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        platform {\n          name\n          info {\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on MLModel {\n        name\n        origin\n        description\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        globalTags {\n          ...globalTagsFields\n          __typename\n        }\n        platform {\n          name\n          info {\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on MLModelGroup {\n        name\n        origin\n        description\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        platform {\n          name\n          info {\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    groups {\n      name\n      count\n      __typename\n    }\n    start\n    count\n    total\n    metadata {\n      path\n      totalNumEntities\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ownershipFields on Ownership {\n  owners {\n    owner {\n      ... on CorpUser {\n        urn\n        type\n        username\n        info {\n          active\n          displayName\n          title\n          email\n          firstName\n          lastName\n          fullName\n          __typename\n        }\n        editableInfo {\n          pictureLink\n          __typename\n        }\n        __typename\n      }\n      ... on CorpGroup {\n        urn\n        type\n        name\n        info {\n          email\n          admins {\n            urn\n            username\n            info {\n              active\n              displayName\n              title\n              email\n              firstName\n              lastName\n              fullName\n              __typename\n            }\n            editableInfo {\n              pictureLink\n              teams\n              skills\n              __typename\n            }\n            __typename\n          }\n          members {\n            urn\n            username\n            info {\n              active\n              displayName\n              title\n              email\n              firstName\n              lastName\n              fullName\n              __typename\n            }\n            editableInfo {\n              pictureLink\n              teams\n              skills\n              __typename\n            }\n            __typename\n          }\n          groups\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    type\n    __typename\n  }\n  lastModified {\n    time\n    __typename\n  }\n  __typename\n}\n\nfragment globalTagsFields on GlobalTags {\n  tags {\n    tag {\n      urn\n      name\n      description\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment glossaryTerms on GlossaryTerms {\n  terms {\n    term {\n      urn\n      name\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"
      }, {
      headers: {
        Cookie: Cookie
      }
    })

    for (let i = 0; i < dataSetsRootRes.data.data.browse.entities.length; i++)
      dataSets.push(await getDataSetInfo(dataSetsRootRes.data.data.browse.entities[i].urn, Cookie))

    for (let i = 0; i < dataSetsRootRes.data.data.browse.groups.length; i++)
      dataSets = await getDataSets([...path, dataSetsRootRes.data.data.browse.groups[i].name], Cookie, dataSets)

    resolve(dataSets)

  })
}

const getDataSetInfo = (urn, Cookie) => {
  return new Promise(async resolve => {

    let DataSetInfoRes = await axios.post('http://datahub.yc.pbd.ai:9002/api/graphql',
      {
        "variables": {
          "urn": urn
        },
        "query": "query getDataset($urn: String!) {\n  dataset(urn: $urn) {\n    ...nonRecursiveDatasetFields\n    downstreamLineage {\n      ...downstreamRelationshipFields\n      __typename\n    }\n    upstreamLineage {\n      ...upstreamRelationshipFields\n      __typename\n    }\n    schemaMetadata(version: 0) {\n      ...schemaMetadataFields\n      __typename\n    }\n    previousSchemaMetadata: schemaMetadata(version: -1) {\n      ...schemaMetadataFields\n      __typename\n    }\n    editableSchemaMetadata {\n      editableSchemaFieldInfo {\n        fieldPath\n        description\n        globalTags {\n          ...globalTagsFields\n          __typename\n        }\n        glossaryTerms {\n          ...glossaryTerms\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    deprecation {\n      actor\n      deprecated\n      note\n      decommissionTime\n      __typename\n    }\n    globalTags {\n      ...globalTagsFields\n      __typename\n    }\n    glossaryTerms {\n      ...glossaryTerms\n      __typename\n    }\n    usageStats(resource: $urn, range: MONTH) {\n      buckets {\n        bucket\n        duration\n        resource\n        metrics {\n          uniqueUserCount\n          totalSqlQueries\n          topSqlQueries\n          __typename\n        }\n        __typename\n      }\n      aggregations {\n        uniqueUserCount\n        totalSqlQueries\n        users {\n          user {\n            urn\n            username\n            __typename\n          }\n          count\n          userEmail\n          __typename\n        }\n        fields {\n          fieldName\n          count\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    datasetProfiles(limit: 1) {\n      rowCount\n      columnCount\n      timestampMillis\n      fieldProfiles {\n        fieldPath\n        uniqueCount\n        uniqueProportion\n        nullCount\n        nullProportion\n        min\n        max\n        mean\n        median\n        stdev\n        sampleValues\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment nonRecursiveDatasetFields on Dataset {\n  urn\n  name\n  type\n  origin\n  description\n  uri\n  platform {\n    name\n    info {\n      displayName\n      logoUrl\n      __typename\n    }\n    __typename\n  }\n  platformNativeType\n  properties {\n    customProperties {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  editableProperties {\n    description\n    __typename\n  }\n  ownership {\n    ...ownershipFields\n    __typename\n  }\n  institutionalMemory {\n    elements {\n      url\n      author {\n        urn\n        username\n        __typename\n      }\n      description\n      created {\n        actor\n        time\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  schemaMetadata(version: 0) {\n    ...schemaMetadataFields\n    __typename\n  }\n  previousSchemaMetadata: schemaMetadata(version: -1) {\n    ...schemaMetadataFields\n    __typename\n  }\n  editableSchemaMetadata {\n    editableSchemaFieldInfo {\n      fieldPath\n      description\n      globalTags {\n        ...globalTagsFields\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  deprecation {\n    actor\n    deprecated\n    note\n    decommissionTime\n    __typename\n  }\n  globalTags {\n    ...globalTagsFields\n    __typename\n  }\n  glossaryTerms {\n    ...glossaryTerms\n    __typename\n  }\n  __typename\n}\n\nfragment ownershipFields on Ownership {\n  owners {\n    owner {\n      ... on CorpUser {\n        urn\n        type\n        username\n        info {\n          active\n          displayName\n          title\n          email\n          firstName\n          lastName\n          fullName\n          __typename\n        }\n        editableInfo {\n          pictureLink\n          __typename\n        }\n        __typename\n      }\n      ... on CorpGroup {\n        urn\n        type\n        name\n        info {\n          email\n          admins {\n            urn\n            username\n            info {\n              active\n              displayName\n              title\n              email\n              firstName\n              lastName\n              fullName\n              __typename\n            }\n            editableInfo {\n              pictureLink\n              teams\n              skills\n              __typename\n            }\n            __typename\n          }\n          members {\n            urn\n            username\n            info {\n              active\n              displayName\n              title\n              email\n              firstName\n              lastName\n              fullName\n              __typename\n            }\n            editableInfo {\n              pictureLink\n              teams\n              skills\n              __typename\n            }\n            __typename\n          }\n          groups\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    type\n    __typename\n  }\n  lastModified {\n    time\n    __typename\n  }\n  __typename\n}\n\nfragment schemaMetadataFields on SchemaMetadata {\n  aspectVersion\n  createdAt\n  datasetUrn\n  name\n  platformUrn\n  version\n  cluster\n  hash\n  platformSchema {\n    ... on TableSchema {\n      schema\n      __typename\n    }\n    ... on KeyValueSchema {\n      keySchema\n      valueSchema\n      __typename\n    }\n    __typename\n  }\n  fields {\n    fieldPath\n    jsonPath\n    nullable\n    description\n    type\n    nativeDataType\n    recursive\n    globalTags {\n      ...globalTagsFields\n      __typename\n    }\n    glossaryTerms {\n      ...glossaryTerms\n      __typename\n    }\n    __typename\n  }\n  primaryKeys\n  foreignKeys {\n    name\n    sourceFields {\n      fieldPath\n      __typename\n    }\n    foreignFields {\n      fieldPath\n      __typename\n    }\n    foreignDataset {\n      urn\n      name\n      type\n      origin\n      description\n      uri\n      platform {\n        name\n        info {\n          displayName\n          logoUrl\n          __typename\n        }\n        __typename\n      }\n      platformNativeType\n      ownership {\n        ...ownershipFields\n        __typename\n      }\n      globalTags {\n        ...globalTagsFields\n        __typename\n      }\n      glossaryTerms {\n        ...glossaryTerms\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment globalTagsFields on GlobalTags {\n  tags {\n    tag {\n      urn\n      name\n      description\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment glossaryTerms on GlossaryTerms {\n  terms {\n    term {\n      urn\n      name\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment downstreamRelationshipFields on DownstreamEntityRelationships {\n  entities {\n    entity {\n      urn\n      type\n      ... on DataJob {\n        ...dataJobFields\n        editableProperties {\n          description\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      ... on Dashboard {\n        ...dashboardFields\n        editableProperties {\n          description\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      ... on Chart {\n        tool\n        chartId\n        info {\n          name\n          description\n          inputs {\n            urn\n            __typename\n          }\n          __typename\n        }\n        editableProperties {\n          description\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      ... on Dataset {\n        name\n        description\n        editableProperties {\n          description\n          __typename\n        }\n        platform {\n          name\n          info {\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      ... on MLModelGroup {\n        urn\n        type\n        name\n        description\n        origin\n        platform {\n          name\n          info {\n            displayName\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      ... on MLModel {\n        urn\n        type\n        name\n        description\n        origin\n        platform {\n          name\n          info {\n            displayName\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment dataJobFields on DataJob {\n  urn\n  type\n  dataFlow {\n    ...nonRecursiveDataFlowFields\n    __typename\n  }\n  jobId\n  ownership {\n    ...ownershipFields\n    __typename\n  }\n  inputOutput {\n    inputDatasets {\n      ...nonRecursiveDatasetFields\n      __typename\n    }\n    outputDatasets {\n      ...nonRecursiveDatasetFields\n      __typename\n    }\n    inputDatajobs {\n      ...nonRecursiveDataJobFields\n      __typename\n    }\n    __typename\n  }\n  info {\n    name\n    description\n    externalUrl\n    customProperties {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  editableProperties {\n    description\n    __typename\n  }\n  globalTags {\n    ...globalTagsFields\n    __typename\n  }\n  institutionalMemory {\n    elements {\n      url\n      author {\n        urn\n        username\n        __typename\n      }\n      label\n      created {\n        time\n        actor\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  glossaryTerms {\n    ...glossaryTerms\n    __typename\n  }\n  __typename\n}\n\nfragment nonRecursiveDataFlowFields on DataFlow {\n  urn\n  type\n  orchestrator\n  flowId\n  cluster\n  info {\n    name\n    description\n    project\n    externalUrl\n    customProperties {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  editableProperties {\n    description\n    __typename\n  }\n  ownership {\n    ...ownershipFields\n    __typename\n  }\n  __typename\n}\n\nfragment nonRecursiveDataJobFields on DataJob {\n  urn\n  info {\n    name\n    description\n    externalUrl\n    customProperties {\n      key\n      value\n      __typename\n    }\n    __typename\n  }\n  globalTags {\n    ...globalTagsFields\n    __typename\n  }\n  __typename\n}\n\nfragment shallowLineageFields on EntityWithRelationships {\n  downstreamLineage {\n    entities {\n      entity {\n        urn\n        type\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  upstreamLineage {\n    entities {\n      entity {\n        urn\n        type\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment dashboardFields on Dashboard {\n  urn\n  type\n  tool\n  dashboardId\n  info {\n    name\n    description\n    customProperties {\n      key\n      value\n      __typename\n    }\n    externalUrl\n    access\n    lastRefreshed\n    created {\n      time\n      __typename\n    }\n    lastModified {\n      time\n      __typename\n    }\n    __typename\n  }\n  ownership {\n    ...ownershipFields\n    __typename\n  }\n  globalTags {\n    ...globalTagsFields\n    __typename\n  }\n  institutionalMemory {\n    elements {\n      url\n      author {\n        urn\n        username\n        __typename\n      }\n      label\n      created {\n        time\n        actor\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  glossaryTerms {\n    ...glossaryTerms\n    __typename\n  }\n  __typename\n}\n\nfragment upstreamRelationshipFields on UpstreamEntityRelationships {\n  entities {\n    entity {\n      urn\n      type\n      downstreamLineage {\n        entities {\n          entity {\n            urn\n            type\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      upstreamLineage {\n        entities {\n          entity {\n            urn\n            type\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on DataJob {\n        urn\n        type\n        dataFlow {\n          urn\n          type\n          orchestrator\n          flowId\n          cluster\n          __typename\n        }\n        jobId\n        info {\n          name\n          description\n          externalUrl\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        editableProperties {\n          description\n          __typename\n        }\n        __typename\n      }\n      ... on Dashboard {\n        urn\n        type\n        tool\n        dashboardId\n        info {\n          externalUrl\n          name\n          description\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        editableProperties {\n          description\n          __typename\n        }\n        __typename\n      }\n      ... on Chart {\n        tool\n        chartId\n        info {\n          name\n          description\n          inputs {\n            urn\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        editableProperties {\n          description\n          __typename\n        }\n        __typename\n      }\n      ... on Dataset {\n        name\n        description\n        platform {\n          name\n          info {\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        editableProperties {\n          description\n          __typename\n        }\n        __typename\n      }\n      ... on MLModelGroup {\n        urn\n        type\n        name\n        description\n        origin\n        platform {\n          name\n          info {\n            displayName\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      ... on MLModel {\n        urn\n        type\n        name\n        description\n        origin\n        platform {\n          name\n          info {\n            displayName\n            logoUrl\n            __typename\n          }\n          __typename\n        }\n        ownership {\n          ...ownershipFields\n          __typename\n        }\n        ...shallowLineageFields\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"
      }, {
      headers: {
        Cookie: Cookie
      }
    })

    resolve(DataSetInfoRes.data.data.dataset.schemaMetadata)

  })
}

getPlaySession().then(d => {
  console.log(d.headers['set-cookie'].map(v => v.split(';')[0]).join('; ') + ';');
  getDataSets([], d.headers['set-cookie'].map(v => v.split(';')[0]).join('; ') + ';').then(v => {
    console.log(v);
  })
})